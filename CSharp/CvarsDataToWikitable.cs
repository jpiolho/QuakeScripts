/*
Converts json data generated by FixAndGetAllCvars.py script from Ghidra into a Wikitable

Send json to stdin and save the stdout
*/
using System;
using System.IO;
using System.Linq;
using System.Text.Json;
using System.Threading.Tasks;

namespace Playground
{
    class Program
    {
        class CvarEntry
        {
            public string Name { get; set; }
            public string Description { get; set; }
            public string DefaultValue { get; set; }
            public string Flags { get; set; }

            public float Min { get; set; }
            public float Max { get; set; }
        }

        static async Task Main(string[] args)
        {
            var jsonOptions = new JsonSerializerOptions()
            {
                PropertyNameCaseInsensitive = true
            };

            var cvars = JsonSerializer.Deserialize<CvarEntry[]>(await Console.In.ReadToEndAsync(), jsonOptions);


            Console.Out.WriteLine("{| class=\"wikitable\"");
            Console.Out.WriteLine("!Cvar");
            Console.Out.WriteLine("!Default value");
            Console.Out.WriteLine("!Description");
            Console.Out.WriteLine("!Min");
            Console.Out.WriteLine("!Max");
            Console.Out.WriteLine("!Flags");
            Console.Out.WriteLine("!Notes");

            foreach (var cvar in cvars.OrderBy(c => c.Name))
            {
                Console.Out.WriteLine("|-");
                Console.Out.WriteLine("| " + cvar.Name);
                Console.Out.WriteLine("| " + cvar.DefaultValue);
                Console.Out.WriteLine("| " + cvar.Description);
                Console.Out.WriteLine("| " + cvar.Min);
                Console.Out.WriteLine("| " + cvar.Max);
                Console.Out.WriteLine("| " + cvar.Flags);
                Console.Out.WriteLine("| ");
            }

            Console.Out.WriteLine("|}");
        }
    }
}
